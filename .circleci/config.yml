---

version: 2.1

# Used Orbs (https://circleci.com/docs/2.0/using-orbs/)
orbs:
  ruby: circleci/ruby@2.1
  sonarcloud: sonarsource/sonarcloud@2.0
  asdf: rynkowsg/asdf@0.1
  codecov: codecov/codecov@4.1

# Pipeline parameters
parameters:
  # The main branch of the repository (e.g. main)
  main-branch:
    type: string
    default: main
  default-ruby:
    type: string
    default: "3.3.0"

# Define common YAML anchors
x-common-auth: &common-auth
  auth:
    username: ${DOCKERHUB_USER}
    password: ${DOCKERHUB_PASSWORD}

# Define executors
executors:
  docker: # Docker using the Base Convenience Image
    docker:
      - image: cimg/base:stable
        <<: *common-auth
  macos: # macOS executor running Xcode
    macos:
      xcode: 15.3.0 # Xcode 15.3 (15E204a), macOS Sonoma14.3.1

jobs:

  # Lint Job
  lint:
    docker:
      - image: cimg/base:stable
        <<: *common-auth
    resource_class: small
    steps:
      # Check out code
      - checkout
      # Install requested Ruby version
      - ruby/install:
          version: "<< pipeline.parameters.default-ruby >>"
      # Install dependencies using bundler
      - ruby/install-deps:
          pre-install-steps:
            - run: bundle config set jobs $(nproc)
          key: gems-v{{ .Environment.CACHE_VERSION }}
      # Run Rubocop
      - run:
          name: Run Rubocop
          command: |
            bash -c "bundle exec rubocop --format=json --out=rubocop-result.json; [[ \$? -ne 2 ]]"
      - store_artifacts:
          path: rubocop-result.json
          destination: rubocop-result.json
      - persist_to_workspace:
          root: .
          paths:
            - rubocop-result.json

  # Test Job
  test:
    parameters:
      # The OS to run the jobs on
      os:
        type: string
        default: docker
      # The OS to run the jobs on
      ruby-version:
        type: string
        default: "3.3.0"
    executor: << parameters.os >>
    environment:
      RUBY_VERSION: << parameters.ruby-version >>
    steps:
      # Install dependencies based on the OS
      - when:
          condition:
            equal: [ "docker", "<< parameters.os >>" ]
          steps:
            - run:
                name: Install ImageMagick, libvips and libffi
                command: |
                  sudo apt-get update
                  sudo apt-get -y --no-install-recommends install openssl imagemagick libvips42 libffi-dev libreadline-dev libtool libyaml-dev
            - asdf/install
      - when:
          condition:
            equal: [ "macos", "<< parameters.os >>" ]
          steps:
            - run:
                name: Install ImageMagick, libvips and libffi
                command: |
                  brew install openssl@3 imagemagick vips asdf libffi
      # Install requested Ruby version
      - run:
          name: Install Ruby << parameters.ruby-version >>
          command: |
            asdf plugin-add ruby
            asdf install ruby << parameters.ruby-version >>
            asdf global ruby << parameters.ruby-version >>
            gem install --user-install executable-hooks
      # Check out code
      - checkout
      # Install dependencies using bundler
      - ruby/install-deps:
          pre-install-steps:
            - run: bundle config set jobs $(nproc)
          key: gems-v{{ .Environment.CACHE_VERSION }}
      # Run RSpec tests
      - run:
          name: Run tests
          command: |
            bundle exec rspec spec
      # Run appraisals
      - run:
          name: Run appraisals
          command: |
            bundle exec appraisal install --jobs=$(nproc) --retry 3
            bundle exec appraisal rspec
      # Store test results
      - store_test_results:
          path: rspec/rspec.xml
      # Persist test results to workspace and upload to CodeCov for default Ruby
      - when:
          condition:
            and:
              - equal: [ "docker", "<< parameters.os >>" ]
              - equal: [ "<< pipeline.parameters.default-ruby >>", "<< parameters.ruby-version >>" ]
          steps:
            - persist_to_workspace:
                root: .
                paths:
                  - rspec
                  - coverage
            - codecov/upload

  # Sonarcloud Job
  sonarcloud:
    docker:
      - image: cimg/openjdk:21.0-node
        <<: *common-auth
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Replace Version
          command: |
            if [ -n "${CIRCLE_TAG}" ] && [ ! -z "${CIRCLE_TAG}" ] ; then
              export APP_VERSION="${CIRCLE_TAG}"
            elif [ -n "${CIRCLE_BRANCH}" ] && [ ! -z "${CIRCLE_BRANCH}" ] ; then
              export APP_VERSION="${CIRCLE_BRANCH}"
            else
              export APP_VERSION="${CIRCLE_SHA1:0:7}"
            fi
            echo "Setting version to ${APP_VERSION}"
            sed -i -e "s\\sonar.projectVersion=.*$\\sonar.projectVersion=${APP_VERSION}\\g" sonar-project.properties
      - sonarcloud/scan


################################################################################

workflows:
  multiple-rubies:
    jobs:
      # Test Job
      - test:
          context:
            - DockerHub
          matrix:
            parameters:
              os: ["docker", "macos"]
              ruby-version: ["2.7.8", "3.0.6", "3.1.4", "3.2.3", "3.3.0"]
      # Lint Job
      - lint:
          context:
            - DockerHub
          requires:
            - test
      # Sonarcloud Job
      - sonarcloud:
          context:
            - DockerHub
            - SonarCloud
          requires:
            - lint
            - test
